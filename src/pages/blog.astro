---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import SingleCardArticle from "../components/SingleCardArticle.astro";

const articles = await getCollection("blog");

const sortedByLatestDate = articles.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

const populateCategories = (articles) => {
  const categories = articles.reduce((acc, article) => {
    const categories = article.data.categories.map((category) => category);
    return [...acc, ...categories];
  }, []);
  return [...new Set(categories)];
};

const categories = populateCategories(articles);

// Create a new array of articles with the category name.
// The expected output is an array with the following shape:
// [[category, [articles]], [category, [articles]], ...]
// Use sortedByLatestDate and categories to create the array.
const articlesByCategory = categories.map((category: string) => {
  const articles = sortedByLatestDate.filter((article) => {
    return article.data.categories.includes(category);
  });
  return [category, articles];
});

const articlesMap = Object.fromEntries(articlesByCategory);
---

<Layout
  title="Blog | Asep Bagja"
  description="Asep Bagja's writing in the topic that he's interested"
  openGraph={{
    title: "Blog | Asep Bagja",
    url: "https://www.asepbagja.com/blog",
    image: "https://www.asepbagja.com/images/blog.png",
    type: "website",
  }}
>
  <Navbar />
  <section
    class="max-w-3xl px-4 mt-10 pt-10 lg:pt-14 sm:px-6 lg:px-8 mx-auto"
  >
    <!-- Title -->
    <div class="mx-auto max-w-2xl mb-8 lg:mb-14 text-center">
      <h2
        class="text-5xl lg:text-4xl text-gray-800 font-bold dark:text-neutral-200"
      >
        Blog
      </h2>
      <p class="mt-3 text-xl text-gray-800 dark:text-neutral-200">
        My writings on software, electronics, and personal development.<br />I write in English and Indonesian.
      </p>
    </div>
  </section>

  <div class="container py-5 mx-auto hidden md:block">
    <div class="max-w-[85rem] px-4 sm:px-6 lg:px-8 mx-auto">
      <div class="grid sm:grid-cols-2 lg:grid-cols-4 gap-6">
      {
        sortedByLatestDate.map((article) => {
          const isEnglish = article.slug.startsWith("en/");
          const englishPath = `/${article.data.categories?.[0].toLowerCase()}/${article.slug.replace("en/", "")}`;
          const otherPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}/${article.slug.split('/').slice(1).join('/')}`;
          const link = isEnglish ? englishPath : otherPath;
          
          const englishCategoryPath = `/${article.data.categories?.[0].toLowerCase()}`;
          const otherCategoryPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}`;
          const categoryPath = isEnglish ? englishCategoryPath : otherCategoryPath;

          return (
            <SingleCardArticle
              title={article.data.title}
              href={link}
              imageSrc={article.data.images?.[0]}
              imageAlt={`the thumbnail of ${article.data.title}`}
              date={article.data.date.toLocaleDateString()}
              categoryPath={categoryPath}
              category={article.data.categories?.[0]}
            /> 
          );
        })
      }
      </div>
    </div>
  </div>

  <div class="container pb-5 pt-14 mx-auto block md:hidden">
    <ul class="space-y-10 px-4 sm:px-6">
      {
        sortedByLatestDate.map((article) => {
          const isEnglish = article.slug.startsWith("en/");
          const englishPath = `/${article.data.categories?.[0].toLowerCase()}/${article.slug.replace("en/", "")}`;
          const otherPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}/${article.slug.split('/').slice(1).join('/')}`;
          const link = isEnglish ? englishPath : otherPath;
          
          const englishCategoryPath = `/${article.data.categories?.[0].toLowerCase()}`;
          const otherCategoryPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}`;
          const categoryPath = isEnglish ? englishCategoryPath : otherCategoryPath;

          return (
            <li>
              <p class="mb-2 text-lg text-gray-500 dark:text-neutral-400">
                {article.data.date.toLocaleDateString()} &bull; <a class="text-gray-500 underline hover:text-gray-800 hover:decoration-2 focus:outline-none focus:decoration-2 dark:text-neutral-400 dark:hover:text-neutral-200" href={categoryPath}>{article.data.categories?.[0]}</a>
              </p>
              <h5 class="font-medium text-xl text-gray-800 dark:text-neutral-200">
                {article.data.title}
              </h5>
              <p class="mt-1 text-lg text-gray-500 dark:text-neutral-400">
                {article.data.summary}
              </p>
              <p class="mt-1">
                <a class="text-md text-gray-500 underline hover:text-gray-800 hover:decoration-2 focus:outline-none focus:decoration-2 dark:text-neutral-200 dark:hover:text-neutral-400" href={link}>
                  Continue reading
                </a>
              </p>
            </li>
          );
        })
      }
    </ul>
  </div>
  <Footer />
</Layout>
