---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import SingleCardArticle from "../components/SingleCardArticle.astro";

export async function getStaticPaths() {
  const articles = await getCollection("blog");

  const populateCategories = (articles) => {
    const categories = articles.reduce((acc, article) => {
      const categories = article.data.categories.map((category) => category);
      return [...acc, ...categories];
    }, []);
    return [...new Set(categories)];
  };

  const categories = populateCategories(articles);

  return categories.flatMap((category: string) => {
    const categoryArticles = articles.filter((article) =>
      article.data.categories.includes(category)
    );

    const englishArticles = categoryArticles.filter((article) =>
      article.slug.startsWith("en/")
    );
    const otherArticles = categoryArticles.filter(
      (article) => !article.slug.startsWith("en/")
    );

    const paths = [];

    if (englishArticles.length > 0) {
      paths.push({
        params: { category: category.toLowerCase() },
        props: {
          articles: englishArticles.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()),
          category,
          locale: "en",
        },
      });
    }

    if (otherArticles.length > 0) {
      const locales = [...new Set(otherArticles.map((article) => article.slug.split('/')[0]))];
      locales.forEach((locale) => {
        paths.push({
          params: { category: `${locale}/${category.toLowerCase()}` },
          props: {
            articles: otherArticles
              .filter((article) => article.slug.startsWith(`${locale}/`))
              .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()),
            category,
            locale,
          },
        });
      });
    }

    return paths;
  });
}

const { articles, category, locale } = Astro.props;
---

<Layout
  title={`${category} | Asep Bagja`}
  description={`Asep Bagja's blog about ${category}`}
  openGraph={{
    title: `${category} | Asep Bagja`,
    url: `https://www.asepbagja.com/${locale ? locale + '/' : ''}${category.toLowerCase()}`,
    image: "https://www.asepbagja.com" + articles[0].data.images?.[0],
    type: "website",
  }}
>
  <Navbar />
  <section
    class="max-w-3xl px-4 mt-10 pt-10 lg:pt-14 sm:px-6 lg:px-8 mx-auto"
  >
    <!-- Title -->
    <div class="mx-auto max-w-2xl mb-8 lg:mb-14 text-center">
      <h2
        class="text-5xl lg:text-4xl text-gray-800 font-bold dark:text-neutral-200"
      >
        {category}
      </h2>
      <p class="mt-3 text-xl text-gray-800 dark:text-neutral-200">
        Articles in the {category} category
      </p>
    </div>
  </section>

  <div class="container py-5 mx-auto hidden md:block">
    <div class="max-w-[85rem] px-4 sm:px-6 lg:px-8 mx-auto">
      <div class="grid sm:grid-cols-2 lg:grid-cols-4 gap-6">
      {
        articles.map((article) => {
          const isEnglish = article.slug.startsWith("en/");
          const englishPath = `/${article.data.categories?.[0].toLowerCase()}/${article.slug.replace("en/", "")}`;
          const otherPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}/${article.slug.split('/').slice(1).join('/')}`;
          const link = isEnglish ? englishPath : otherPath;
          
          const englishCategoryPath = `/${article.data.categories?.[0].toLowerCase()}`;
          const otherCategoryPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}`;
          const categoryPath = isEnglish ? englishCategoryPath : otherCategoryPath;

          return (
            <SingleCardArticle
              title={article.data.title}
              href={link}
              imageSrc={article.data.images?.[0]}
              imageAlt={`the thumbnail of ${article.data.title}`}
              date={article.data.date.toLocaleDateString()}
              categoryPath={categoryPath}
              category={article.data.categories?.[0]}
            /> 
          );
        })
      }
      </div>
    </div>
  </div>

  <div class="container pb-5 pt-14 mx-auto block md:hidden">
    <ul class="space-y-10 px-4 sm:px-6">
      {
        articles.map((article) => {
          const isEnglish = article.slug.startsWith("en/");
          const englishPath = `/${article.data.categories?.[0].toLowerCase()}/${article.slug.replace("en/", "")}`;
          const otherPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}/${article.slug.split('/').slice(1).join('/')}`;
          const link = isEnglish ? englishPath : otherPath;
          
          const englishCategoryPath = `/${article.data.categories?.[0].toLowerCase()}`;
          const otherCategoryPath = `/${article.slug.split('/')[0]}/${article.data.categories?.[0].toLowerCase()}`;
          const categoryPath = isEnglish ? englishCategoryPath : otherCategoryPath;

          return (
            <li>
              <p class="mb-2 text-lg text-gray-500 dark:text-neutral-400">
                {article.data.date.toLocaleDateString()} &bull; <a class="text-gray-500 underline hover:text-gray-800 hover:decoration-2 focus:outline-none focus:decoration-2 dark:text-neutral-400 dark:hover:text-neutral-200" href={categoryPath}>{article.data.categories?.[0]}</a>
              </p>
              <h5 class="font-medium text-xl text-gray-800 dark:text-neutral-200">
                {article.data.title}
              </h5>
              <p class="mt-1 text-lg text-gray-500 dark:text-neutral-400">
                {article.data.summary}
              </p>
              <p class="mt-1">
                <a class="text-md text-gray-500 underline hover:text-gray-800 hover:decoration-2 focus:outline-none focus:decoration-2 dark:text-neutral-200 dark:hover:text-neutral-400" href={link}>
                  Continue reading
                </a>
              </p>
            </li>
          );
        })
      }
    </ul>
  </div>
  <Footer />
</Layout>
