---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import TwoGridsArticle from "../components/TwoGridsArticle.astro";
import OneGridArticle from "../components/OneGridArticle.astro";

export async function getStaticPaths() {
  const articles = await getCollection("blog");

  const populateCategories = (articles) => {
    const categories = articles.reduce((acc, article) => {
      const categories = article.data.categories.map((category) => category);
      return [...acc, ...categories];
    }, []);
    return [...new Set(categories)];
  };

  const categories = populateCategories(articles);

  return categories.flatMap((category: string) => {
    const categoryArticles = articles.filter((article) =>
      article.data.categories.includes(category)
    );

    const englishArticles = categoryArticles.filter((article) =>
      article.slug.startsWith("en/")
    );
    const otherArticles = categoryArticles.filter(
      (article) => !article.slug.startsWith("en/")
    );

    const paths = [];

    if (englishArticles.length > 0) {
      paths.push({
        params: { category: category.toLowerCase() },
        props: {
          articles: englishArticles.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()),
          category,
          locale: "en",
        },
      });
    }

    if (otherArticles.length > 0) {
      const locales = [...new Set(otherArticles.map((article) => article.slug.split('/')[0]))];
      locales.forEach((locale) => {
        paths.push({
          params: { category: `${locale}/${category.toLowerCase()}` },
          props: {
            articles: otherArticles
              .filter((article) => article.slug.startsWith(`${locale}/`))
              .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()),
            category,
            locale,
          },
        });
      });
    }

    return paths;
  });
}

const { articles, category, locale } = Astro.props;
---

<Layout
  title={`${category} | Asep Bagja`}
  description={`Asep Bagja's blog about ${category}`}
  openGraph={{
    title: `${category} | Asep Bagja`,
    url: `https://www.asepbagja.com/${locale ? locale + '/' : ''}${category.toLowerCase()}`,
    image: "https://www.asepbagja.com" + articles[0].data.images?.[0],
    type: "website",
  }}
>
  <Navbar />
  <main class="container py-5">
    <section class="row">
      <div class="col-12">
        <h1 class="border-bottom border-2 border-dark">{category}</h1>
      </div>
    </section>
    <section class="row pt-4">
      {
        articles.map((article, index) => {
          const articlePath = locale === "en"
            ? `/${article.data.categories?.[0].toLowerCase()}/${article.slug.replace("en/", "")}`
            : `/${locale}/${article.data.categories?.[0].toLowerCase()}/${article.slug.split('/').slice(1).join('/')}`;

          if (index < 2) {
            return (
              <TwoGridsArticle
                title={article.data.title}
                excerpt={article.data.summary}
                imageSrc={article.data.images?.[0]}
                imageAlt={`the thumbnail of ${article.data.title}`}
                href={articlePath}
              />
            );
          }

          return (
            <OneGridArticle
              title={article.data.title}
              excerpt={article.data.summary}
              imageSrc={article.data.images?.[0]}
              imageAlt={`the thumbnail of ${article.data.title}`}
              href={articlePath}
            />
          );
        })
      }
    </section>
  </main>
  <Footer />
</Layout>

<style>
  h1 {
    width: fit-content;
  }
</style>
